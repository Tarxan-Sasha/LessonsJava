package LessonsAboutCollections;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

/*
 * ArrayList - это класс который реализует интрефейс List.
 * Представляет из себя обычный массив, по сути, за одним важным исключением 
 * он не имеет фиксированой длинны.
 * ArrayList способен к саморасширению без нашего участия.
 * Изначально внутренний массив имеет размер 10.
 * Но когда мы добавляем 11 элемент, внутрений масив ArrayList сам расширяеться
 * по формуле:
 * (старое количество элементов * 1.5)+1
 * Он перезапишиться в новый увеличеный масив, а старый удалит сборщик мусора
 * 
 * Мы можем и сами задать количество элементов ArrayList.
 * но в случаи выхода за пределы этого значения, ArrayList все равно расшириться.
 * Просто то что мы указываем изначальный размер внутренего массива, позволяет нам избежать потери производительности.
 * 
 * + ArrayList:
 * + Быстрый доступ по индексу
 * + Быстрая вставка и удаление элементов с конца
 * - ArrayList
 * - Медленная вставка и удаление элементов из середины и начала
 * 
 * ArrayList, также, в отличии от масивов имеет ряд полезных методов, таких как:
 * add(); - метод добавления, добавляет в самый конец, если задать индекс(например 0) тогда все элемнеты после него сдвинуться на один индекс вперед, вправо
 * set(); - метод заменяет выбранный элемент на нужный нам, затирая/удаляя прошлый
 * contains(); - метод првоеряет наличие элемента в списке
 * indexOf(); - метод возвращает индекс элемента
 * get(); - возвращает элемент по индексу
 * size(); = возвращает количество элементов списка
 * remove(); - удаляет выбранный элемент по его индексу, если удалить не последний тогда все элементы сдвинуться влево на один
 * removeAll(); - удаляет всю указаную колекцию
 * и другие...
 * 
 */
public class LessonsAboutArrayList {
	public static void main(String [] args) {
		List<Demons> linkedList = new LinkedList<>();
		
		//ArrayList имеет три конструктора
		ArrayList<String> names = new ArrayList<String>();//Это обычный конструктор, где мы НЕ указываем размер
		ArrayList<Demons> demons = new ArrayList<>(linkedList);//это конструтор где мы передаем в ArrayList другую колекцию, считай конфертируем её в ArrayList.
															   //Типы(generic'ы, то что в <>) должны быть одинаковы
		List<Integer> numbers = new ArrayList<>(20);//Это констуртор с уже заранее выделеным размером 20
		
		names.add("Ilyukha");//Индекс 0
		names.add("Bobos");//Индекс 1
		names.add("Lesha");//Индекс 2
		
		System.out.println(names);
		
		names.add(0, "Adrey");//Задаем индекс 0(первое место) после чего всекто идут дальше сдвинулись на один вперед
		
		System.out.println(names);
		
		names.set(2, "Alina");//Метод заменяет выбраный элемент по индексу, стирая прошлый
		
		System.out.println(names);
		
		System.out.println(names.contains("Bobos"));//Происходит проверка которая покажет false потому что такого элемента больше нет
		System.out.println(names.contains("Lesha"));//Происходит проверка которая покажет true потому что такой элемент есть
		
		System.out.println(names.indexOf("Ilyukha"));//Показывает индекс элемента Илюхи
		
		System.out.println(names.get(1));//Показывает элемент по указаному индексу
		
		System.out.println(names.size());//Показывает количество элементов в списке
		
		names.remove(0);//Удаляем єлемент по индексу 0
		System.out.println(names);
		
		names.removeAll(names);//Удалили ВСЮ нашу колекцию
		System.out.println(names);
	}
}
