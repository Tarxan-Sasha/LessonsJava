package LessonsAboutJava;

import java.util.Scanner;

/*
 * Enum или перечисление - это набор логически связаных между собой констант.
 * Enum это по сути новый тип для переменных и в эти переменные можно положить только те константы котороые указаны в Enum.
 * Новые константы можно сделать лишь в самом Enum.
 * 
 * Например, пользователь должен выбрать в какой день недели он хочет прийти куда нибудь,
 * Можно создать String переменную в которую пользователь впишет "понедельник", но ведь он может вписать например что то другое.
 * Неделя не может иметь других дней кроме стандартных.
 * И для решение такой проблемы есть enum.
 * Это очень простой пример его использования.
 * Суть в том что мы создаем набор значений которые может создать пользователь, или другой програмист в своем классе.
 * Все значения которые можно присвоить переменной с типом Enum, это её константы.
 * И создать новые ВНЕ Enum нельзя.
 * 
 * Enum по сути являеться классом, а потому имеет все возможности класса.
 * Enum может иметь конструктор, методы и переменные.
 * Сами константы по сути являються обьектами класса Enum, просто их можно поместить в переменную.
 * Так же Enum можно создать в классе, но не в методе.
 * Отличия Enum от нормального класса в том что:
 * 1)Конструктор Enum имеет уровень доступа private по умолчанию.
 * Из-за этого нельзя создать дополнительных констант\обьектов Enum вне самого Enum.
 * 2)Enum не может наследоваться. Enum уже неявно наследуеться от класса java.lang.Enum потому наследоваться от кого то еще не может.
 * Так же Enum не может и быть родителеем. В общем наследование для Enum отключено.
 * Но Enum может расширять инетрфейсы.
 * 
 * Методы Enum, благодаря своему родителю Enum имеет несколько методов:
 * 1) values() - передает массивы значений всех констант.
 * 2) valueOf(String s) - возвращает константу, если переданное слово s совпадает с её именем. 
 * 3) ordinar() - возвращает порядковый номер константы, начинаеться все как в массивах с 0.
 * 3) equals() - сравнивает две константы, он вернет true только если обе константы имеют одно и тоже название и они являються константами\обьектами одного и того же перечисления.
 * 4) compareTo() - сравнивает порядковые номаера констант, возвращает int значение где: 1 - true, 0 - ровно, -1 - false. 
 * 
 * Констуркторы могут быть перегружены, как и сами методы в enum.
 * Что бы преопределить метод для конкретной константы/обьекта, нужно открыть скобочку(по сути тело) сразу после конструктора в момент создания константы/обьекта.
 * Если требуеться переопределить несколько методов, это делаеться там же
 * 
 */
public class LessonAboutEnum {

	public static void main(String[] args) {
		
		Weapons weapon1 = Weapons.BOW;//Передаем переменной типа Weapons значение константы BOW
		System.out.println(weapon1);
		
		
		Scanner scanner = new Scanner(System.in);
		Weapons weapon2 = Weapons.valueOf(scanner.nextLine());//Метод valueOf буквально конфертирует String в константу Enum
		System.out.println(weapon2);

	}
	
	

}
enum Weapons{
	
	BOW("Range"),//Константы/обьекты enum с конструктором
	SWORD("Melee"), 
	MACE("Melee"),
	CROSSBOW("Range"){
		public void attack() {//Переопределяем метод именно для арбалета
			System.out.println("Стреляет и требует перезарядки");
		}
	},
	AXE("Melee"),
	PIKA;//Константа/обьект enum без конструктора
	
	String type = "melee";
	
	Weapons(String type){
		this.type = type;
	}
	Weapons(){
		
	}
	
	public String getType() {
		return type;
	}
	
	
	public void attack() {
		if(this.getType() == "Range") {
			System.out.println("Выстрел");
		}else {
			System.out.println("Удар");
		}
	}
	
}
