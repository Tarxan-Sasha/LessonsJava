/*
 * Интерфейс - это словно кантракт, он говорит что классу делать, но не говорит как.
 * Интерфейс - это один из механизмов реалищации полиморфизма, то есть "один интерфейс, несколько методов".
 * Интерфейсы, как и классы могут быть объявлены с уровнем доступа public или default.
 * Все методы в Интерфейсе имеют свойства public abstract по умолчанию, прописывать их не обязательно
 * Все переменные в Интерфейсе имеют свойства public static final по умолчанию, прописывать их не обязательно
 * 
 * В JDK8(java8) появились методы по умолчанию или методы расширения.
 * Это методы с реализацией, переопределять в классах их не обязательно, но можно.
 * Такие методы обозначаются ключевым словом default.
 *
 * В JDK8(java8) появились возможность определять статические методы.
 * Вызываютсья так же как и обычно, 
 * только надо написать не имя класса, а имя Интерфейса:
 * Moveable.HearStep();
 * 
 * Интерфейс может наследовать другой интерфейс с посмощью ключевого слова extends.
 * Один Интерфейс может наследовать несколько других Интерфейсов.
 * Класс реализующий Интерфес у которого есть родительские Интерфейсы, должен реализовать все методы ВСЕХ Интерфесйсоф
 *
 */

package LessonAboutInterface;

public interface Moveable {
	public static final int SPEED=3;
	int STEP=1;
	
	public abstract void moveUp();
	void moveDown();
	void moveLeft();
	void moveRight();
	
	default String run() {
		return "Бежит!!!";
	}
	
	static void HearStep() {
		System.out.println("Слышен шаг");
	}

}
