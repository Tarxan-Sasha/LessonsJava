/*
 * Класс может иметь только один родительский класс и не важно Абстрактный родитель или нет.
 * Класс также может и наследоватсья и реализовувать Интерфейсы.
 * Класс наследующий Абстрактный класс ОБЬЯЗАН переопределить\реализовать ВСЕ абстрактные методы родительского класса.
 * Конeчно же свои методы класс иметь может.
 * 
 */
package LessonsAboutAbstaract;

public class Bear extends Animal implements Moveable{
	public Bear() {
	}
	
	@Override
	public void sleep() {// переопределяем метод абстрактного класса Animal
		System.out.println("Bear is sleeping");		
	}
	
	@Override
	public void drink() {// переопределяем метод абстрактного класса Animal
		System.out.println("Bear is drinking");		
	}
	
	@Override
	public void move() {// переопределяем метод интерфейса Moveable
		System.out.println("Bear is moving");
	}
	
	public void scratch() {
		System.out.println("Bear is scratching your back on wood");
	}
	
	////////////////////////////
	
	public Bear(String name, boolean carnivorous) {
		//int someValue = 3; //Будет ошибка,потому что в конструкторе вызов родительского конструктора через ключевое слово super должно быть первым, а потом уже что угодно.
		super(name, carnivorous); // Вызываем конструктор суперкласса, и передаем ему наши значение конструтора. Эта строка должна быть первой, иначе ошибка. 
		/*
		 * Мы передаем наши значения в верх по классу, сначала передаваемые значения поступают сюда,
		 * потом передаються через super() в родительский констурктор.
		 * Сначала родительский конструктор обрабатывает значения, а потом уже его дочерние конструторы. 
		 * 
		 * Если у родительского класса есть свой родитель, тогда значения не остановяться и 
		 * пойдут дальше через super уже в родителя нашего родителя, и так до конца иерархии.
		 * Сначала срабатывает самый главный конструктор, а потом уже все его дочерние по очереди вниз по иерархии. 
		 * 
		 * Мы не можем менять порядок значений, если мы сделаем так:
		 * super(carnivorous, name);
		 * Будет ошибка, ведь в родительском классе сначала идет String значение, а потом уже boolean значение.
		 * 
		 */
		System.out.println("И только теперь мы в конструкторе Bear");
	}
	
	
}
