package LessonsJAVA;
/*
 * static - это ключевое слово которое определяет переменную или метод как собственность класса, а не обекта.
 * Все методы\переменные класса создаються\инициализируються только тогда, когда создаеться обекст, до этого их по-сути нету. 
 * И доступ к  ним мы, соотвественно, можем получить только через обьект, потому можно сказать что все эти методы\переменные обьекта
 * 
 * Но с ключевым словом static мы обозначаем что данный метод\переменная являеться мотодом\переменной класса.
 * То есть они появляються сразу же в созданном классе, а не тогда когда создаётся обьект.
 * И доступ к ним мы можем получить через имя класса, а не через имя обьекта:
 * Human.count=23;
 * 
 * Все статичные перееменные инициализируються автоматически, то есть если мы не указали изначально им значение, то они примут свое базовое.
 * Значение статичной переменной ОДИНАКОВОЕ для всех обьектов.
 * К статическим перемменным и методам можно обратиться с помощью обьекта. А переменные можно и изменить.
 * Но это нарущает саму концепцую ООП, зачем к ним обращяться через обьект если они общие для всех обьектов, 
 * если перемнную нужно изменить под какой-то отдельный обьект, тогда эту переменную статичной делать не стоит.
 * 
 * Так же все стататичные методы могут использовать лишь статичные перемнные. 
 * Потому что статичный метод сразу создаться и будет в памяти, без создания обьекта.
 * А не статичная переменная в нем, существовать не будет, поскольку она появиться только при создании обьекта.
 * Потому бдует ошибка.
 * 
 * Когда над статической переемнной для её инициализации нужно провести действия
 * нужно обьявить статический блок.
 * Статический блок выполнитья лишь 1 раз, при первой загрузки класса.
 * Обьявляеться простым словом static и телом:
 * static{
 * 
 *  }
 * 
 */
public class LessonAboutStatic {
	public static void main(String [] args) {
		
		System.out.println(Human.count+" счетчик статичной пееремнной");//Обращаемся к статичной переменной по классу
		
		Human human1=new Human("Bobas", 21);//count == 1
		human1.humanInfo();//count == 1
		Human human2=new Human("Ilyukha", 21);//count == 2
		Human human3=new Human("Andrey", 21);//count == 3
		human1.humanInfo();//count == 3, вне зависимости от того каким обьектом мы вызваем статичную переменную, она для всех общая
		
		human3.humanInfo();//count == 3, вне зависимости от того каким обьектом мы вызваем статичную переменную, она для всех общая
		
		Human.count=24;//Меняем count на 24, через класс
		System.out.println(Human.count);//count == 24, виводим через класс и видим это
		human3.humanInfo();//count == 24, вне зависимости от того каким обьектом мы вызваем статичную переменную, она для всех общая

		human1.count=4;//count == 4, мы сменили статичную перемную через обьект, это можно сделать, НО НЕ ИМЕЕТ СМЫСЛА!, теперь count == 4 ДЛЯ ВСЕХ ОБЬЕКТОВ
		System.out.println(human1.count);//count == 4, мы вивели статичную перемную через обьект, не имеет смысла каким обьектом мы изменили значение, теперь count == 4 ДЛЯ ВСЕХ ОБЬЕКТОВ
		System.out.println(human2.count);//count == 4, мы вивели статичную перемную через обьект, не имеет смысла каким обьектом мы изменили значение, теперь count == 4 ДЛЯ ВСЕХ ОБЬЕКТОВ
		System.out.println(Human.count);//count == 4, вывели классом
		
		System.out.println(Human.HEAD);
		
	}
}
class Human {
	
	String name;
	int age;

	static int count;//Тут мы не указали значение, потому оно автоматически равно 0
	
	static {//Статический блок
		System.out.println("Статичный блок инициализирован");
	}
	
	static final int HEAD=1;//Оьявление константной переменноой, с помощью ключевого слова final
		
	public Human(String name, int age){
		this.name=name;
		this.age=age;
		count++;//Переменная будт инкрементироваться каждый раз когда будет создаваться обьект
	}
	public void humanInfo() {
		System.out.println(name+" "+age+" "+count);
	}
	
}




